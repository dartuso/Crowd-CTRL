@page "/tournament-teams"
@layout Shared.SocialLayout
@inject NavigationManager NavigationManager
@inject PageHistoryState PageHistoryState


<style>
    .page-layout {
        text-align:center;
        justify-self: center;
        display: grid;
        grid-template-areas: 
            "header1 header1"
            "uheader uheader"
            "col1 col1"
            "col1 col1"
            "col1 col1"
            "but1 but2";
        margin: 20px;
        width: fit-content;
        margin-left: auto;
        margin-right: auto;
    }

    .header1 {
        grid-area: header1;
    }
    .uheader {
        grid-area: uheader;
    }
    .col1 {
        grid-area: col1;
    }
    .but1 {
        margin: 5px;
        grid-area: but1;
    }
    .but2 { 
        margin: 5px;
        grid-area: but2;
    }
    form {
        text-align: left;
    }

</style>

<div class="page-layout">
    <h1 class="header1">Enter team details</h1>
    <h3 class="uheader">(type team name or click invite)</h3>

    <EditForm Model="@TournamentCreate._tournament" class="col1">
    <DataAnnotationsValidator />
    <ValidationSummary />
    @foreach (ATeam team in TournamentCreate._tournament.TeamNames)
    {
        <div>
        <label for="tname">Team #@team.teamNo</label>
        <a href="" @onclick:preventDefault class="badge badge-secondary">
            <h4>Invite</h4>
        </a>
        <br>
        <input @bind="team.teamName" class="form-control" type="text" name="tname" style="margin: 5px;"><br>
        </div>
    }
    <button class="btn btn-primary but1 " @onclick="TournamentCreateNavigate">Go back</button>
    <button type="submit" class="btn btn-primary but2 " @onclick="TournamentBracketNavigate">Continue</button>
    </EditForm>
    
</div>



@code {
    private void TournamentCreateNavigate() 
    {
        NavigationManager.NavigateTo(PageHistoryState.GetGoBackPage());
    }

    private void TournamentBracketNavigate() 
    {
        NavigationManager.NavigateTo("tournament-bracket");          
        PageHistoryState.AddPageToHistory("tournament-teams");
    }

    private void submitTeamNames() {
        
    }
}
